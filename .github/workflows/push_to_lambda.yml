# This yaml only pushes the code to the existing lambda. You must create
#  the lambda function(s) in the AWS Console first, before triggering the pipeline. 
# Source:  https://www.whitespectre.com/ideas/multiple-aws-lambda-deployment-with-github-actions/
on:
  push:
    branches:
      - push_to_lambda
jobs:
  deploy1:
    name: Deploy lambda code for write_to_DB function
    runs-on: macos-latest

    steps:
      - name: Checkout the files
        uses: actions/checkout@v2
          
      # Setp AWS CLI
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-2

      # The first parameter can be whatever you want to name your zip file. Really does not matter.
      #   just make sure you use the same file name in the next step below.
      # The second parameter should be the file path of your local lambda code you want to deploy
      - name: Zip python code
        run: zip -j write_to_DB_code.zip ./write_to_DB/lambda_function.py

      # TODO: Change the --function-name value to match your function name in AWS
      - name: Deploy python code to lambda
        run: aws lambda update-function-code --function-name=write_to_DB --zip-file=fileb://write_to_DB_code.zip
